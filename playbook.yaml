---
- hosts: quagga
  gather_facts: no
  vars_files:
  - ./vault/secrets.yaml
  vars:
  - network_backup_repository: "YOUR GIT REPOSITORY HERE"
  - network_backup_dir: /tmp/quagga/
  tasks:
    - name: Clone the backup repo
      git:
        repo: "{{ network_backup_repository }}"
        dest: "{{ network_backup_dir }}"
        accept_hostkey: yes
        force: yes
      register: clone_result
      delegate_to: localhost
      run_once: true
      when: network_backup_repository is defined
    - name: "Store file into {{ network_backup_dir }}"
      ansible.builtin.fetch:
        src: "/etc/quagga/{{ item }}"
        dest: "{{ network_backup_dir }}"
      loop: "{{ backup_files }}"
      when: backup_host == "TRUE"
      become: yes
    - block:
      - name: Add any new backups to the repository
        shell: "git add ."
        args:
          chdir: "{{ network_backup_dir }}"
        delegate_to: localhost
        changed_when: False
        run_once: true

      - name: Get the status of the repository
        shell: "git status"
        args:
          chdir: "{{ network_backup_dir }}"
        register: status_results
        changed_when: False
        ignore_errors: yes
        delegate_to: localhost
        run_once: true

      - name: Commit the changes
        shell:  |
          today=$(date +"%Y-%m-%d %H:%M:%S")
          git commit -am "Changed ${today}"
        args:
          chdir: "{{ network_backup_dir }}"
        when: status_results.stdout is search('Changes')
        delegate_to: localhost
        run_once: true
        environment:
          GIT_COMMITTER_NAME: "{{ git_name | default(omit) }}"
          GIT_COMMITTER_EMAIL: "{{ git_email | default(omit) }}"
          GIT_AUTHOR_NAME: "{{ git_name | default(omit) }}"
          GIT_AUTHOR_EMAIL: "{{ git_email | default(omit) }}"

      - name: Push the changes
        shell: "git push origin master"
        args:
          chdir: "{{ network_backup_dir }}"
        run_once: true
        when: status_results.stdout is search('Changes')
        delegate_to: localhost
        environment:
          GIT_COMMITTER_NAME: "{{ git_name | default(omit) }}"
          GIT_COMMITTER_EMAIL: "{{ git_email | default(omit) }}"
          GIT_AUTHOR_NAME: "{{ git_name | default(omit) }}"
          GIT_AUTHOR_EMAIL: "{{ git_email | default(omit) }}"
        when: network_backup_repository is defined
    - name: Delete backup directory
      file: path="{{ network_backup_dir }}" state=absent
      run_once: true
      delegate_to: localhost
